module TravelAgency;

global protocol Booking(role C, role A, role S)
{
  Query(x: Int) from C to A;
  Quote(quot: Int) from A to C;
  do BookingAux(C, A, S);
}

aux global protocol BookingAux(role C, role A, role S)
{
  choice at C
  {
    Query(y: Int) from C to A;
    Quote(q1: Int) from A to C;
    Dummy() from A to S;
    do BookingAux(C, A, S);
  }
  or
  {
    Yes() from C to A;
    Yes() from A to S;
    Payment(pay: Int) from C to S;
    Ack() from S to C;
    Bye() from C to A;
  }
  or
  {
    No() from C to A;
    No() from A to S;
    Bye() from C to A;
  }
}